{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,kBACnCC,EAAWF,SAASC,cAAc,iBAClCE,EAAaH,SAASC,cAAc,mBAG1C,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAZMN,SAASC,cAAc,SAoC/Ba,iBAAiB,UApBH,SAAAC,GACjBA,EAAEC,iBAIF,IAHA,IAAIC,EAAWC,OAAOC,SAASpB,EAAUqB,OACrCC,EAAUH,OAAOC,SAASjB,EAASkB,OAE9BE,EAAI,EAAGA,EAAInB,EAAWiB,MAAOE,IACpClB,EAAckB,EAAI,EAAGL,EAAWI,EAAUC,GACvCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formDelay = document.querySelector('[name=\"delay\"]');\nconst formStep = document.querySelector('[name=\"step\"]');\nconst formAmount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst getPromise = e => {\n  e.preventDefault();\n  let newDelay = Number.parseInt(formDelay.value);\n  let newStep = Number.parseInt(formStep.value);\n\n  for (let i = 0; i < formAmount.value; i++) {\n    createPromise(i + 1, newDelay + newStep * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n};\n\nform.addEventListener('submit', getPromise);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formDelay","document","querySelector","$ce04d3a99e08e73b$var$formStep","$ce04d3a99e08e73b$var$formAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","newDelay","Number","parseInt","value","newStep","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.338a9f6b.js.map"}